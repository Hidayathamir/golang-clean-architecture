version: '3.8'

x-signoz-common: &signoz-common
  networks:
    - signoz-net
  restart: unless-stopped
  logging:
    options:
      max-size: 50m
      max-file: "3"

x-signoz-clickhouse-defaults: &signoz-clickhouse-defaults
  <<: *signoz-common
  image: clickhouse/clickhouse-server:25.5.6
  tty: true
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9363"
    signoz.io/path: "/metrics"
  depends_on:
    init-clickhouse:
      condition: service_completed_successfully
    zookeeper-1:
      condition: service_healthy
  healthcheck:
    test:
      - CMD
      - wget
      - --spider
      - -q
      - 0.0.0.0:8123/ping
    interval: 30s
    timeout: 5s
    retries: 3
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
  environment:
    - CLICKHOUSE_SKIP_USER_SETUP=1

x-signoz-zookeeper-defaults: &signoz-zookeeper-defaults
  <<: *signoz-common
  image: signoz/zookeeper:3.7.1
  user: root
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9141"
    signoz.io/path: "/metrics"
  healthcheck:
    test:
      - CMD-SHELL
      - curl -s -m 2 http://localhost:8080/commands/ruok | grep error | grep null
    interval: 30s
    timeout: 5s
    retries: 3

x-signoz-db-depend: &signoz-db-depend
  <<: *signoz-common
  depends_on:
    clickhouse:
      condition: service_healthy
    schema-migrator-sync:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:15
    container_name: postgres-clean-arch
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: golang_clean_architecture
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper-clean-arch
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka-clean-arch
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  akhq:
    image: tchiotludo/akhq:dev
    container_name: akhq
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka:
              properties:
                bootstrap.servers: "kafka:29092"
    depends_on:
      - kafka

  init-clickhouse:
    <<: *signoz-common
    image: clickhouse/clickhouse-server:25.5.6
    container_name: signoz-init-clickhouse
    command:
      - bash
      - -c
      - |
        version="v0.0.1"
        node_os=$$(uname -s | tr '[:upper:]' '[:lower:]')
        node_arch=$$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
        echo "Fetching histogram-binary for $${node_os}/$${node_arch}"
        cd /tmp
        wget -O histogram-quantile.tar.gz "https://github.com/SigNoz/signoz/releases/download/histogram-quantile%2F$${version}/histogram-quantile_$${node_os}_$${node_arch}.tar.gz"
        tar -xvzf histogram-quantile.tar.gz
        mv histogram-quantile /var/lib/clickhouse/user_scripts/histogramQuantile
    restart: on-failure
    volumes:
      - ./signoz/deploy/common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/

  zookeeper-1:
    <<: *signoz-zookeeper-defaults
    container_name: signoz-zookeeper-1
    volumes:
      - signoz-zookeeper-1:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
      - ZOO_ENABLE_PROMETHEUS_METRICS=yes
      - ZOO_PROMETHEUS_METRICS_PORT_NUMBER=9141

  clickhouse:
    <<: *signoz-clickhouse-defaults
    container_name: signoz-clickhouse
    volumes:
      - ./signoz/deploy/common/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./signoz/deploy/common/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./signoz/deploy/common/clickhouse/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./signoz/deploy/common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/
      - ./signoz/deploy/common/clickhouse/cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - signoz-clickhouse:/var/lib/clickhouse/

  signoz:
    <<: *signoz-db-depend
    image: signoz/signoz:${VERSION:-v0.99.0}
    container_name: signoz
    command:
      - --config=/root/config/prometheus.yml
    ports:
      - "3301:8080"
    volumes:
      - ./signoz/deploy/common/signoz/prometheus.yml:/root/config/prometheus.yml
      - ./signoz/deploy/common/dashboards:/root/config/dashboards
      - signoz-sqlite:/var/lib/signoz/
    environment:
      - SIGNOZ_ALERTMANAGER_PROVIDER=signoz
      - SIGNOZ_TELEMETRYSTORE_CLICKHOUSE_DSN=tcp://clickhouse:9000
      - SIGNOZ_SQLSTORE_SQLITE_PATH=/var/lib/signoz/signoz.db
      - DASHBOARDS_PATH=/root/config/dashboards
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
      - DOT_METRICS_ENABLED=true
    healthcheck:
      test:
        - CMD
        - wget
        - --spider
        - -q
        - localhost:8080/api/v1/health
      interval: 30s
      timeout: 5s
      retries: 3

  otel-collector:
    <<: *signoz-db-depend
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-v0.129.7}
    container_name: signoz-otel-collector
    command:
      - --config=/etc/otel-collector-config.yaml
      - --manager-config=/etc/manager-config.yaml
      - --copy-path=/var/tmp/collector-config.yaml
      - --feature-gates=-pkg.translator.prometheus.NormalizeName
    volumes:
      - ./signoz/deploy/docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./signoz/deploy/common/signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      signoz:
        condition: service_healthy

  schema-migrator-sync:
    <<: *signoz-common
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.129.7}
    container_name: schema-migrator-sync
    command:
      - sync
      - --dsn=tcp://clickhouse:9000
      - --up=
    depends_on:
      clickhouse:
        condition: service_healthy
    restart: on-failure

  schema-migrator-async:
    <<: *signoz-db-depend
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.129.7}
    container_name: schema-migrator-async
    command:
      - async
      - --dsn=tcp://clickhouse:9000
      - --up=
    restart: on-failure

networks:
  signoz-net:
    name: signoz-net

volumes:
  signoz-clickhouse:
    name: signoz-clickhouse
  signoz-sqlite:
    name: signoz-sqlite
  signoz-zookeeper-1:
    name: signoz-zookeeper-1
