// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/contacts": {
            "get": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Search and list contacts with filters and pagination",
                "tags": [
                    "contacts"
                ],
                "summary": "List contacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-array_golang-clean-architecture_internal_model_ContactResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Create a new contact",
                "tags": [
                    "contacts"
                ],
                "summary": "Create contact",
                "parameters": [
                    {
                        "description": "Create Contact Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.CreateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_ContactResponse"
                        }
                    }
                }
            }
        },
        "/api/contacts/{contactId}": {
            "get": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Get a specific contact by ID",
                "tags": [
                    "contacts"
                ],
                "summary": "Get contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_ContactResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Update an existing contact by ID",
                "tags": [
                    "contacts"
                ],
                "summary": "Update contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Contact Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.UpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_ContactResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Delete a contact by ID",
                "tags": [
                    "contacts"
                ],
                "summary": "Delete contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-bool"
                        }
                    }
                }
            }
        },
        "/api/contacts/{contactId}/addresses": {
            "get": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Get all addresses for a contact",
                "tags": [
                    "addresses"
                ],
                "summary": "List addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-array_golang-clean-architecture_internal_model_AddressResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Create a new address for a contact",
                "tags": [
                    "addresses"
                ],
                "summary": "Create address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Address Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.CreateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_AddressResponse"
                        }
                    }
                }
            }
        },
        "/api/contacts/{contactId}/addresses/{addressId}": {
            "get": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Get a specific address by ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Get address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_AddressResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Update an existing address by ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Update address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Address Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.UpdateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_AddressResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Delete an address by ID",
                "tags": [
                    "addresses"
                ],
                "summary": "Delete address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-bool"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "description": "Register a new user account",
                "tags": [
                    "users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Logout the current authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-bool"
                        }
                    }
                }
            }
        },
        "/api/users/_current": {
            "get": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Get profile of the currently authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_UserResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "SimpleApiKeyAuth": []
                    }
                ],
                "description": "Update profile of the current authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Update User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_UserResponse"
                        }
                    }
                }
            }
        },
        "/api/users/_login": {
            "post": {
                "description": "Authenticate a user and return access token",
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_model.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "golang-clean-architecture_internal_delivery_http_response.PageMetadata": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total_item": {
                    "type": "integer"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-array_golang-clean-architecture_internal_model_AddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/golang-clean-architecture_internal_model.AddressResponse"
                    }
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-array_golang-clean-architecture_internal_model_ContactResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/golang-clean-architecture_internal_model.ContactResponse"
                    }
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-bool": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_AddressResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_model.AddressResponse"
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_ContactResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_model.ContactResponse"
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_delivery_http_response.WebResponse-golang-clean-architecture_internal_model_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_model.UserResponse"
                },
                "error_detail": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/golang-clean-architecture_internal_delivery_http_response.PageMetadata"
                }
            }
        },
        "golang-clean-architecture_internal_model.AddressResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "golang-clean-architecture_internal_model.ContactResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/golang-clean-architecture_internal_model.AddressResponse"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "golang-clean-architecture_internal_model.CreateAddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 255
                },
                "country": {
                    "type": "string",
                    "maxLength": 100
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 10
                },
                "province": {
                    "type": "string",
                    "maxLength": 255
                },
                "street": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "golang-clean-architecture_internal_model.CreateContactRequest": {
            "type": "object",
            "required": [
                "first_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 200
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "golang-clean-architecture_internal_model.LoginUserRequest": {
            "type": "object",
            "required": [
                "id",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "golang-clean-architecture_internal_model.RegisterUserRequest": {
            "type": "object",
            "required": [
                "id",
                "name",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "golang-clean-architecture_internal_model.UpdateAddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 255
                },
                "country": {
                    "type": "string",
                    "maxLength": 100
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 10
                },
                "province": {
                    "type": "string",
                    "maxLength": 255
                },
                "street": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "golang-clean-architecture_internal_model.UpdateContactRequest": {
            "type": "object",
            "required": [
                "first_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 200
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "golang-clean-architecture_internal_model.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "password": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "golang-clean-architecture_internal_model.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "SimpleApiKeyAuth": {
            "description": "Simple token authorization",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Golang Clean Architecture",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
